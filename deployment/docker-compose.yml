# deployment/docker-compose.yml
version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: instabids-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: supabase/postgres:15.1.0
    container_name: instabids-postgres
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./deployment/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=yoursecurepassword
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  api:
    build:
      context: .
      dockerfile: deployment/Dockerfile
    container_name: instabids-api
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=http://db:5432 # Placeholder, use real URL in prod
      - SUPABASE_SERVICE_ROLE_KEY=your_supabase_key # Placeholder
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  # NEW SERVICE: LiveKit Media Server
  # Handles the WebRTC connections for real-time video and audio.
  livekit:
    image: livekit/livekit-server:latest
    container_name: instabids-livekit-server
    restart: unless-stopped
    ports:
      - "7880:7880"    # Server API
      - "7881:7881"    # WebRTC
      - "7882:7882/udp" # TURN/UDP
    environment:
      LIVEKIT_KEYS: "devkey: secret" # Use environment variables in production
      LIVEKIT_PORT: 7880
      LIVEKIT_RTC_PORT: 7881
    networks:
      - agent-swarm
    volumes:
      - ./config/livekit.yaml:/etc/livekit.yaml

  # NEW AGENT: Media Processor Agent
  # Dedicated agent to process incoming video/audio streams.
  media-processor-agent:
    build:
      context: .
      dockerfile: ./docker/agents/media-processor/Dockerfile
    container_name: instabids-media-processor-agent
    restart: unless-stopped
    environment:
      REDIS_URL: redis://redis:6379
      LIVEKIT_URL: "http://livekit:7880"
      LIVEKIT_API_KEY: "devkey"
      LIVEKIT_API_SECRET: "secret"
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      AGENT_TYPE: media_processor
      AGENT_ID: media-processor-${AGENT_INSTANCE:-001}
    volumes:
      - agent-logs:/app/logs
    networks:
      - agent-swarm
    depends_on:
      - redis
      - livekit

networks:
  agent-swarm:
    driver: bridge

volumes:
  redis_data:
  db_data:
  agent-logs:
